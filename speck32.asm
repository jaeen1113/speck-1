; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\hub\speck\speck32.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_speck32_setkey
; Function compile flags: /Ogspy
;	COMDAT _speck32_setkey
_TEXT	SEGMENT
_i$ = 8							; size = 2
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_speck32_setkey PROC					; COMDAT
; File c:\hub\speck\speck32.c
; Line 36
	push	ebp
	mov	ebp, esp
; Line 40
	mov	ecx, DWORD PTR _in$[ebp]
	movzx	eax, WORD PTR [ecx]
; Line 42
	movzx	edx, WORD PTR [ecx+4]
; Line 46
	and	DWORD PTR _i$[ebp], 0
	push	ebx
	mov	ebx, DWORD PTR _out$[ebp]
	push	esi
	movzx	esi, WORD PTR [ecx+6]
	push	edi
	movzx	edi, WORD PTR [ecx+2]
$LL3@speck32_se:
; Line 50
	push	7
	pop	ecx
	ror	di, cl
	mov	WORD PTR [ebx], ax
; Line 54
	movzx	esi, si
	add	di, ax
	xor	di, WORD PTR _i$[ebp]
	rol	ax, 2
	movzx	ecx, di
	xor	ax, cx
	inc	DWORD PTR _i$[ebp]
	movzx	edi, dx
	add	ebx, 2
	cmp	WORD PTR _i$[ebp], 22			; 00000016H
	mov	edx, esi
	movzx	eax, ax
; Line 55
	mov	esi, ecx
	jb	SHORT $LL3@speck32_se
	pop	edi
	pop	esi
	pop	ebx
; Line 57
	pop	ebp
	ret	0
_speck32_setkey ENDP
_TEXT	ENDS
PUBLIC	_speck32_encrypt
; Function compile flags: /Ogspy
;	COMDAT _speck32_encrypt
_TEXT	SEGMENT
tv191 = -4						; size = 4
tv431 = 8						; size = 4
_keys$ = 8						; size = 4
_enc$ = 12						; size = 4
tv496 = 16						; size = 4
_in$ = 16						; size = 4
_speck32_encrypt PROC					; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 68
	mov	ecx, DWORD PTR _keys$[ebp]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _in$[ebp]
	movzx	eax, WORD PTR [esi]
; Line 69
	movzx	edx, WORD PTR [esi+2]
	mov	DWORD PTR tv431[ebp], ecx
	add	ecx, 42					; 0000002aH
	push	edi
	mov	DWORD PTR tv496[ebp], ecx
	mov	DWORD PTR tv191[ebp], 22		; 00000016H
$LL5@speck32_en:
; Line 73
	cmp	DWORD PTR _enc$[ebp], 1
	jne	SHORT $LN2@speck32_en
; Line 75
	xor	edx, eax
	push	2
	pop	ecx
	ror	dx, cl
; Line 76
	mov	ecx, DWORD PTR tv496[ebp]
	movzx	ecx, WORD PTR [ecx]
	mov	edi, ecx
	movzx	ebx, ax
	movzx	edx, dx
	xor	ecx, eax
	xor	edi, ebx
	sub	edi, edx
	sub	ecx, edx
	sar	edi, 9
	shl	ecx, 7
	or	edi, ecx
	movzx	eax, di
; Line 77
	jmp	SHORT $LN4@speck32_en
$LN2@speck32_en:
; Line 78
	push	7
	pop	ecx
	ror	ax, cl
	mov	ecx, DWORD PTR tv431[ebp]
	add	ax, dx
	xor	ax, WORD PTR [ecx]
; Line 79
	rol	dx, 2
	movzx	eax, ax
	xor	dx, ax
	movzx	edx, dx
$LN4@speck32_en:
; Line 71
	sub	DWORD PTR tv496[ebp], 2
	add	DWORD PTR tv431[ebp], 2
	dec	DWORD PTR tv191[ebp]
	jne	SHORT $LL5@speck32_en
; Line 83
	pop	edi
	mov	WORD PTR [esi], ax
; Line 84
	mov	WORD PTR [esi+2], dx
	pop	esi
	pop	ebx
; Line 85
	leave
	ret	0
_speck32_encrypt ENDP
_TEXT	ENDS
PUBLIC	_speck32_encryptx
; Function compile flags: /Ogspy
;	COMDAT _speck32_encryptx
_TEXT	SEGMENT
_i$ = -4						; size = 2
_k3$ = 8						; size = 2
_key$ = 8						; size = 4
_in$ = 12						; size = 4
_speck32_encryptx PROC					; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR _key$[ebp]
	movzx	edx, WORD PTR [eax]
; Line 102
	mov	ecx, DWORD PTR _in$[ebp]
; Line 105
	and	DWORD PTR _i$[ebp], 0
	push	ebx
	movzx	ebx, WORD PTR [eax+2]
	push	esi
	movzx	esi, WORD PTR [ecx+2]
	push	edi
	movzx	edi, WORD PTR [eax+4]
	movzx	eax, WORD PTR [eax+6]
	mov	DWORD PTR _k3$[ebp], eax
	movzx	eax, WORD PTR [ecx]
$LL8@speck32_en@2:
; Line 108
	push	7
	pop	ecx
	ror	ax, cl
; Line 115
	movzx	edi, di
	add	ax, si
	xor	ax, dx
	rol	si, 2
	movzx	eax, ax
	xor	si, ax
	ror	bx, cl
	movzx	esi, si
	add	bx, dx
	xor	bx, WORD PTR _i$[ebp]
	rol	dx, 2
	movzx	ecx, bx
	movzx	ebx, WORD PTR _k3$[ebp]
	xor	dx, cx
	inc	DWORD PTR _i$[ebp]
	cmp	WORD PTR _i$[ebp], 22			; 00000016H
	mov	DWORD PTR _k3$[ebp], edi
	mov	edi, ebx
; Line 116
	movzx	ebx, WORD PTR _k3$[ebp]
	movzx	edx, dx
	mov	DWORD PTR _k3$[ebp], ecx
	jb	SHORT $LL8@speck32_en@2
; Line 119
	mov	ecx, DWORD PTR _in$[ebp]
	pop	edi
; Line 120
	mov	WORD PTR [ecx+2], si
	pop	esi
	mov	WORD PTR [ecx], ax
	pop	ebx
; Line 121
	leave
	ret	0
_speck32_encryptx ENDP
_TEXT	ENDS
END
